// src/services/paymentService.js
import { Markup } from 'telegraf';
import CryptoBotService from '../utils/cryptoBot.js';
import { createNotionTask } from '../utils/notion.js';

export class PaymentService {
  constructor(bot) {
    this.bot = bot;
    this.cryptoBot = new CryptoBotService(bot);
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–≤–æ–π—Å–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –∑–∞–∫–∞–∑–∞
  async createInvoice(ctx) {
    try {
      const order = ctx.session.order;
      
      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å (10 USD –∑–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—é)
      const totalAmount = order.adaptationsCount * 10;
      
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π
      const allLocalizations = this.getAllLocalizations();
      const selectedLocalizationNames = order.selectedLocalizations
        .map(id => allLocalizations.find(loc => loc.id === id)?.name)
        .filter(Boolean);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É –∑–∞–∫–∞–∑–∞
      const orderSummary = this.createOrderSummary(order, selectedLocalizationNames, totalAmount);
      await ctx.reply(orderSummary, { parse_mode: 'Markdown' });
      
      // –°–æ–∑–¥–∞–µ–º –∏–Ω–≤–æ–π—Å –≤ CryptoBot
      await ctx.reply('üîÑ –°–æ–∑–¥–∞–µ–º —Å—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã...');
      
      const invoice = await this.cryptoBot.createInvoice(
        totalAmount,
        `–ó–∞–∫–∞–∑ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ #${order.orderNumber}`,
        order.orderNumber
      );
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–ø–ª–∞—Ç—É
      await this.sendInvoiceMessage(ctx, invoice, totalAmount, order.orderNumber);
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–Ω–≤–æ–π—Å–∞ –≤ —Å–µ—Å—Å–∏—é
      ctx.session.invoiceId = invoice.invoice_id;
      ctx.session.step = 'awaiting_payment';
      
      console.log(`üí≥ Invoice created for user ${ctx.from.id}: ${invoice.invoice_id}`);
      
    } catch (error) {
      console.error('‚ùå Error creating invoice:', error);
      await ctx.reply(
        '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—á–µ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
      );
    }
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–∫–∏ –∑–∞–∫–∞–∑–∞
  createOrderSummary(order, localizationNames, totalAmount) {
    return `
üìã *–°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞:*

üî¢ –ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: ${order.orderNumber}
üé¨ –ê–¥–∞–ø—Ç–∞—Ü–∏–π: ${order.adaptationsCount}
üåç –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏: ${localizationNames.join(', ')}
üè¶ –ë–∞–Ω–∫: ${order.bank}
üí∞ –°—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞: ${order.winningAmount} ${order.currency}
üìù –î–æ–ø. –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è: ${order.additionalInfo || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üíµ *–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ: ${totalAmount} USD*
    `.trim();
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω–≤–æ–π—Å–æ–º
  async sendInvoiceMessage(ctx, invoice, totalAmount, orderNumber) {
    await ctx.reply(
      `üí≥ *–°—á–µ—Ç –¥–ª—è –æ–ø–ª–∞—Ç—ã —Å–æ–∑–¥–∞–Ω!*\n\n` +
      `üí∞ –°—É–º–º–∞: ${this.cryptoBot.formatAmount(totalAmount)}\n` +
      `üìù –û–ø–∏—Å–∞–Ω–∏–µ: –ó–∞–∫–∞–∑ –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ #${orderNumber}\n\n` +
      `‚è∞ –°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω 15 –º–∏–Ω—É—Ç`,
      {
        parse_mode: 'Markdown',
        ...this.createPaymentKeyboard(invoice.pay_url)
      }
    );
  }

  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –æ–ø–ª–∞—Ç—ã
  createPaymentKeyboard(invoiceUrl) {
    return Markup.inlineKeyboard([
      [Markup.button.url('üí≥ –û–ø–ª–∞—Ç–∏—Ç—å', invoiceUrl)],
      [Markup.button.callback('üí≥ –ò–º–∏—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–ª–∞—Ç—É', 'simulate_payment')],
      [Markup.button.callback('‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É', 'check_payment')]
    ]);
  }

  // –ò–º–∏—Ç–∞—Ü–∏—è –æ–ø–ª–∞—Ç—ã
  async simulatePayment(ctx) {
    await ctx.answerCbQuery('üí≥ –ò–º–∏—Ç–∏—Ä—É–µ–º –æ–ø–ª–∞—Ç—É...');
    
    await ctx.editMessageText(
      'üí≥ *–ò–º–∏—Ç–∞—Ü–∏—è –æ–ø–ª–∞—Ç—ã...*\n\n' +
      '‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–ª–∞—Ç–µ–∂...',
      { parse_mode: 'Markdown' }
    );
    
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–ø–ª–∞—Ç—ã
    setTimeout(async () => {
      await this.completePayment(ctx);
    }, 3000);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ–ø–ª–∞—Ç—ã
  async checkPayment(ctx) {
    await ctx.answerCbQuery('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–ª–∞—Ç—É...');
    
    const invoiceId = ctx.session.invoiceId;
    
    if (!invoiceId) {
      await ctx.reply('‚ùå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—á–µ—Ç–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return;
    }
    
    await ctx.editMessageText('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã...');
    
    const paymentStatus = await this.cryptoBot.checkPaymentStatus(invoiceId);
    
    if (paymentStatus.status === 'paid') {
      await this.completePayment(ctx);
    } else {
      await ctx.reply(
        '‚ùå –û–ø–ª–∞—Ç–∞ –µ—â–µ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.',
        Markup.inlineKeyboard([
          [Markup.button.callback('üîÑ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—â–µ —Ä–∞–∑', 'check_payment')]
        ])
      );
    }
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Notion
  async completePayment(ctx) {
    try {
      const order = ctx.session.order;
      const userId = ctx.from.id;
      
      // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π
      const allLocalizations = this.getAllLocalizations();
      const localizationNames = order.selectedLocalizations
        .map(id => allLocalizations.find(loc => loc.id === id)?.name)
        .filter(Boolean);
      
      await ctx.editMessageText('üì§ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ —Å–∏—Å—Ç–µ–º–µ...');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–∫–∞–∑ –≤ Notion
      const notionTask = await createNotionTask({
        orderNumber: order.orderNumber,
        userId: userId,
        adaptationsCount: order.adaptationsCount,
        localizations: localizationNames,
        bank: order.bank,
        winningAmount: order.winningAmount,
        currency: order.currency,
        additionalInfo: order.additionalInfo
      });
      
      // –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
      await this.sendSuccessMessage(ctx, order.orderNumber, notionTask.id);
      
      console.log(`‚úÖ Order ${order.orderNumber} completed for user ${userId}`);
      
      // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
      this.clearSession(ctx);
      
    } catch (error) {
      console.error('‚ùå Error completing payment:', error);
      await this.sendErrorMessage(ctx);
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç–µ
  async sendSuccessMessage(ctx, orderNumber, notionTaskId) {
    await ctx.reply(
      `üéâ *–û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!*\n\n` +
      `‚úÖ –ó–∞–∫–∞–∑ #${orderNumber} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –ø–µ—Ä–µ–¥–∞–Ω –≤ —Ä–∞–±–æ—Ç—É.\n` +
      `üìã –ó–∞–ø–∏—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ: ${notionTaskId ? '—Å–æ–∑–¥–∞–Ω–∞' : '–æ—à–∏–±–∫–∞'}\n\n` +
      `–ú—ã —É–≤–µ–¥–æ–º–∏–º –≤–∞—Å –∫–æ–≥–¥–∞ –∞–¥–∞–ø—Ç–∞—Ü–∏—è –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞.`,
      { parse_mode: 'Markdown' }
    );
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ
  async sendErrorMessage(ctx) {
    await ctx.reply(
      '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.'
    );
  }

  // –û—á–∏—Å—Ç–∫–∞ —Å–µ—Å—Å–∏–∏
  clearSession(ctx) {
    ctx.session.step = 'completed';
    ctx.session.order = {};
    ctx.session.invoiceId = null;
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π
  getAllLocalizations() {
    return [
      { id: 1, name: "üá∫üá∏ EN (–∞–Ω–≥–ª–∏–π—Å–∫–∏–π)" },
      { id: 2, name: "üá¨üáß UK (–±—Ä–∏—Ç–∞–Ω—Å–∫–∏–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)" },
      { id: 3, name: "üá∫üá¶ UA (—É–∫—Ä–∞–∏–Ω—Å–∫–∏–π)" },
      { id: 4, name: "üá∑üá∫ RU (—Ä—É—Å—Å–∫–∏–π)" },
      { id: 5, name: "üá©üá™ DE (–Ω–µ–º–µ—Ü–∫–∏–π)" },
      { id: 6, name: "üá´üá∑ FR (—Ñ—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π)" },
      { id: 7, name: "üá™üá∏ ES (–∏—Å–ø–∞–Ω—Å–∫–∏–π)" },
      { id: 8, name: "üáÆüáπ IT (–∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π)" },
      { id: 41, name: "üåç –î—Ä—É–≥–æ–µ" },
    ];
  }
}

export default PaymentService;